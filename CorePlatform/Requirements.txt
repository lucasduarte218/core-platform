Registro de Atendimento
A clínica ACME deseja ter uma solução web para registrar os atendimentos realizados com seus
pacientes. Para isso está pedindo um site que possíbilite o cadastramento dos pacientes e
registro dos atendimentos de cada paciente.
A solução deve ser divida em duas partes, onde a primeira será o cadastro de pacientes com os
campos nome, data de nascimento, CPF, sexo, endereço e status. Já a segunda parte será o
registro do atendimento, onde deve ser selecionado um paciente e informado a data e hora e
descrição do atendimento.
Deve ser possível pesquisar os paciente por nome ou CPF, bem como listar os atendimentos por
paciente.
Cadastro de Pacientes
O cadastro de pacientes deve possuir as seguintes informações:
• Nome (obrigatório)
• Data nascimento (obrigatório)
• CPF (obrigatório)
• Sexo (obrigatório)
• Endereço Completo (CEP, cidade, bairro, endereço e complemento - opcional)
• Status (obrigatório – Ativo/Inativo)
O sistema deve validar para não permitir CPF duplicado.
Requisitos:
• Listar pacientes, com opção de filtro pelo nome, CPF e Status;
• Cadastrar e editar paciente;
• Inativar pacientes;
Registro de Atendimento
O registro de atendimentos deve possuir as seguintes informações:
• Paciente (obrigatório)
• Data e Hora (obrigatório)
• Descrição do atendimento (obrigatório)
• Status (obrigatório – Ativo/Inativo)
O sistema deve validar para não permitir registros com data e hora no futuro, apenas registros
até a data e hora atual.
Requisitos:
• Possibilitar a consulta de paciente, mostrando apenas pacientes ativos (Status ativo);
• Cadastrar e editar registros de atendimento;
• A descrição deve permitir textos grandes com quebra de linha;
• Inativar registros;
• Listar atendimentos com filtro por data (período), paciente e status;
Forma de Envio:
Enviar link do repositório no GitHub, Bitbucket, GitLab, etc.
O que Iremos Avaliar:
• Funcionalidades: Atender os requisitos do enunciado;
• Organização do código:
o Separação de responsabilidades
o Facilidade de leitura/entendimento;
o Organização de pastas;
o Semântica do código;
• Conhecimento do framework: Utilização correta das funcionalidades e conceitos do
framework escolhido para o desenvolvimento do sistema;
• Conhecimento Web: Marcação HTML, estilos,javascript/Typescript;
• Conhecimento de git: Padronização dos commits.
Opcionais:
• Testes unitários;
• Utilização de interfaces;
